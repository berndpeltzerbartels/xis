plugins {
    id "java"
}

group = rootProject.ext.projectGroup
version = rootProject.ext.projectVersion

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
}


// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var junitVersion = rootProject.ext.libraryVersions.junit
var assertjVersion = rootProject.ext.libraryVersions.assertj
var jacksonVersion = "2.14.1"
var gsonVersion = "2.10.1"
var mockitoVersion = "5.2.0"


dependencies {

    // Local project dependencies
    implementation project(":xis-util")
    implementation project(":xis-remote-core")
    implementation project(":xis-context")
    implementation project(":xis-adapter-spi")
    testImplementation project(":xis-adapter-spi")
    testImplementation project(":xis-test")

    // Lombok dependencies
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    implementation "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor("org.projectlombok:lombok:$lombokVersion")

    // Gson dependency
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Jackson dependencies
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    // JUnit dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // Mockito dependencies
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"

    // AssertJ dependencies
    testImplementation "org.assertj:assertj-core:$assertjVersion"

}

test {
    maxParallelForks = 4
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
}
