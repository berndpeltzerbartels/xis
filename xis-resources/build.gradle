plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = rootProject.ext.projectGroup
version = rootProject.ext.projectVersion

tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var reflectionsVersion = rootProject.ext.libraryVersions.reflections
var slf4jVersion = "2.0.3"
var tinylogVersion = "2.6.1"
var junitVersion = "5.7.0"


dependencies {

    // Local project dependencies
    implementation(project(":xis-context"))
    implementation(project(":xis-util"))

    // Lombok dependencies
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    implementation("org.projectlombok:lombok:$lombokVersion")

    // SLF4J dependency
    implementation("org.slf4j:slf4j-api:$slf4jVersion")

    // Reflections dependency
    implementation("org.reflections:reflections:$reflectionsVersion")

    // Tinylog dependencies
    implementation("org.tinylog:tinylog-api:$tinylogVersion")
    implementation("org.tinylog:tinylog-impl:$tinylogVersion")

    // JUnit dependencies
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

test {
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.name

            pom {
                name = 'XIS ' + project.name.capitalize()
                description = 'Module ' + project.name + ' of the XIS declarative web framework.'
                url = 'https://github.com/berndpeltzerbartels/xis'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'bernd'
                        name = 'Bernd Peltzer-Bartels'
                        email = 'bernd@xis.one'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/berndpeltzerbartels/xis.git'
                    developerConnection = 'scm:git:git@github.com:berndpeltzerbartels/xis.git'
                    url = 'https://github.com/berndpeltzerbartels/xis'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2")
            credentials {
                username = project.findProperty("ossrhUsername") ?: ""
                password = project.findProperty("ossrhPassword") ?: ""
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    useGpgCmd()
}


tasks.withType(Javadoc) {
    options.addBooleanOption('Xdoclint:none', true)
    options.addStringOption('encoding', 'UTF-8')
}
