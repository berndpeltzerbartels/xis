import one.xis.gradle.JavascriptPlugin

plugins {
    id 'java'
}

group = rootProject.ext.projectGroup
version = rootProject.ext.projectVersion

repositories {
    mavenCentral()
}

 tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
}

//apply plugin: JavascriptPlugin

// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var mockitoVersion = "5.2.0"
var junitVersion = "5.7.0"
var assertjVersion = "3.16.1"
var graalVersion = "23.0.1"


dependencies {

    // Lombok dependencies
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    implementation "org.projectlombok:lombok:$lombokVersion"

    // Local project dependencies
    implementation project(':xis-resources')
    testImplementation project(':xis-test')
    testImplementation project(':xis-util')

    // JUnit dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // Mockito dependencies
    implementation "org.mockito:mockito-core:$mockitoVersion"

    // AssertJ dependencies
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    // GraalVM dependencies
    implementation "org.graalvm.js:js-scriptengine:$graalVersion"
    implementation "org.graalvm.truffle:truffle-api:$graalVersion"
    implementation "org.graalvm.js:js:$graalVersion"
    implementation "org.graalvm.tools:chromeinspector:$graalVersion"
}

test {
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
}