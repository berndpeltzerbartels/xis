plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group 'one.xis'
version rootProject.ext.projectVersion

tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc7'
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation project(':xis-util')
    implementation group: 'com.google.auto.service', name: 'auto-service', version: '1.0-rc7'
    implementation "org.projectlombok:lombok:$lombokVersion"

    implementation group: 'com.squareup', name: 'javapoet', version: '1.12.1'

    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
    //compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.8'


    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'
}

test {
    useJUnitPlatform()
}


publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.name

            pom {
                name = 'XIS ' + project.name.capitalize()
                description = 'Module ' + project.name + ' of the XIS declarative web framework.'
                url = 'https://github.com/berndpeltzerbartels/xis'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'bernd'
                        name = 'Bernd Peltzer-Bartels'
                        email = 'bernd@xis.one'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/berndpeltzerbartels/xis.git'
                    developerConnection = 'scm:git:git@github.com:berndpeltzerbartels/xis.git'
                    url = 'https://github.com/berndpeltzerbartels/xis'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            credentials {
                username = project.findProperty("ossrhUsername") ?: ""
                password = project.findProperty("ossrhPassword") ?: ""
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}


tasks.withType(Javadoc) {
    options.addBooleanOption('Xdoclint:none', true)
    options.addStringOption('encoding', 'UTF-8')
}
