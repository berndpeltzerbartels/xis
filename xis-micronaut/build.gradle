plugins {
    id 'java'
    id 'maven-publish'
    // id 'signing'
}

group = rootProject.ext.projectGroup
version = rootProject.ext.projectVersion

repositories {
    mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
    withSourcesJar()
    withJavadocJar()
}

// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var reflectionsVersion = rootProject.ext.libraryVersions.reflections
var micronautInjectVersion = "4.0.1"
var micronautContextVersion = "2.4.1"
var jakartaAnnotationVersion = "2.1.1"
var jakartaInjectVersion = "2.0.1"
var micronautHttpClientVersion = "4.1.0"
var micronautRxjava2Version = "2.0.1"
var jacksonDatabindVersion = "2.15.2"
var rxjavaVersion = "2.2.21"


dependencies {

    // Annotation processors
    annotationProcessor "io.micronaut:micronaut-inject-java:$micronautInjectVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    // Compile-only dependencies
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    compileOnly "io.micronaut:micronaut-context:$micronautContextVersion"
    compileOnly "jakarta.annotation:jakarta.annotation-api:$jakartaAnnotationVersion"
    compileOnly "jakarta.inject:jakarta.inject-api:$jakartaInjectVersion"
    compileOnly "io.micronaut:micronaut-http-client:$micronautHttpClientVersion"
    compileOnly "io.micronaut.rxjava2:micronaut-rxjava2:$micronautRxjava2Version"
    compileOnly "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"

    // Implementation dependencies
    implementation "io.micronaut.rxjava2:micronaut-rxjava2-http-server-netty:$micronautRxjava2Version"
    implementation "io.micronaut.rxjava2:micronaut-rxjava2-http-client:$micronautRxjava2Version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    implementation "org.reflections:reflections:$reflectionsVersion"

    // Local project dependencies
    implementation project(':xis-context')
    implementation project(':xis-adapter-spi')
    implementation project(':xis-controller-api')

    // Test dependencies
    testImplementation project(':xis-context')
    testImplementation project(':xis-server')
    testImplementation project(':xis-controller-api')
}


/*
java {
    sourceCompatibility = JavaVersion.toVersion("20")
    targetCompatibility = JavaVersion.toVersion("20")
}
*/

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.name

            pom {
                name = 'XIS ' + project.name.capitalize()
                description = 'Module ' + project.name + ' of the XIS declarative web framework.'
                url = 'https://github.com/berndpeltzerbartels/xis'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'bernd'
                        name = 'Bernd Peltzer-Bartels'
                        email = 'bernd@xis.one'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/berndpeltzerbartels/xis.git'
                    developerConnection = 'scm:git:git@github.com:berndpeltzerbartels/xis.git'
                    url = 'https://github.com/berndpeltzerbartels/xis'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2")
            credentials {
                username = project.findProperty("ossrhUsername") ?: ""
                password = project.findProperty("ossrhPassword") ?: ""
            }
        }
    }
}

/*
signing {
    sign publishing.publications.mavenJava
    useGpgCmd()
}
*/


tasks.withType(Javadoc) {
    options.addBooleanOption('Xdoclint:none', true)
    options.addStringOption('encoding', 'UTF-8')
}
