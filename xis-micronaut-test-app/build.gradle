plugins {
    id("groovy")
    id("io.micronaut.application") version "4.0.0"
    id("io.micronaut.test-resources") version "3.5.1"
}

version = "0.0.1"
group = "one.xis"

repositories {
    mavenCentral()
    jcenter()
    maven {
        url = "https://www.dcm4che.org/maven2/"
    }
    maven {
        url = "https://raw.github.com/nroduit/mvn-repo/master/"
    }
}

micronaut {
    version = "4.0.0"
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        //annotations("de.xyz")
    }
    testResources {
        enabled = false
    }
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/groovy'
        }
    }
}

// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var reflectionsVersion = rootProject.ext.libraryVersions.reflections
var micronautInjectVersion = "4.0.1"
var micronautContextVersion = "2.4.1"
var micronautRxjava2Version = "2.0.1"
var jacksonDatabindVersion = "2.15.2"
var rxjavaVersion = "2.2.21"
var groovyVersion = "4.0.13"
var commonsLangVersion = "3.12.0"
var fopVersion = "2.6"
var passayVersion = "1.6.1"


dependencies {

    // Annotation processors
    annotationProcessor("io.micronaut:micronaut-inject-java:$micronautInjectVersion")

    // Local project dependencies
    implementation(project(":xis-remote-core"))
    implementation(project(":xis-micronaut"))
    implementation(project(":xis-test"))
    implementation(project(":xis-adapter-spi"))

    // Micronaut dependencies
    implementation("io.micronaut:micronaut-http-server-netty")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("io.micronaut.mongodb:micronaut-mongo-sync")

    // Jackson and serialization dependencies
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-hibernate6")
    implementation("io.micronaut:micronaut-jackson-databind")

    // Validation dependencies
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")
    implementation("io.micronaut.validation:micronaut-validation")
    annotationProcessor("io.micronaut:micronaut-http-validation")

    // Runtime dependencies
    runtimeOnly("org.mariadb.jdbc:mariadb-java-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("org.yaml:snakeyaml")

    // RxJava dependencies
    implementation("io.micronaut.rxjava2:micronaut-rxjava2")
    implementation("io.micronaut.rxjava2:micronaut-rxjava2-http-client")

    // Groovy dependencies
    implementation("org.apache.groovy:groovy:$groovyVersion")
    implementation("org.apache.groovy:groovy-xml:$groovyVersion")
    implementation("org.apache.groovy:groovy-json:$groovyVersion")
    implementation("org.apache.groovy:groovy-templates:$groovyVersion")

    // Utility libraries
    implementation("org.apache.commons:commons-lang3:$commonsLangVersion")
    implementation("org.apache.xmlgraphics:fop:$fopVersion")
    implementation("org.passay:passay:$passayVersion")

    // OpenAPI and Swagger
    compileOnly("io.micronaut.openapi:micronaut-openapi:4.4.3")
    implementation("io.swagger.core.v3:swagger-annotations")

    // Test runtime
    testRuntimeOnly("com.h2database:h2")
}

application {
    mainClass.set("micronaut.example.MicronautTestApplication")
}

test {
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
}
