plugins {
    id 'java'
}

group 'one.xis'
version rootProject.ext.projectVersion

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
}

// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var dom4jVersion = rootProject.ext.libraryVersions.dom4j
var slf4jVersion = rootProject.ext.libraryVersions.slf4j
var jacksonDatabindVersion = rootProject.ext.libraryVersions.jackson
var tinylogVersion = rootProject.ext.libraryVersions.tinylog
var gsonVersion = rootProject.ext.libraryVersions.gson
var junitVersion = rootProject.ext.libraryVersions.junit
var mockitoVersion = rootProject.ext.libraryVersions.mockito
var assertjVersion = rootProject.ext.libraryVersions.assertj

dependencies {

    // Local project dependencies
    implementation project(':xis-context')
    implementation project(':xis-util')
    implementation project(':xis-controller-api')
    implementation project(':xis-javascript')
    implementation project(':xis-deserializer')
    implementation project(':xis-gson')
    implementation project(':xis-validation')
    implementation project(':xis-adapter-spi')

    // Compile-only dependencies
    compileOnly project(':xis-resources')

    // Annotation processors
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    // Implementation dependencies
    implementation "org.projectlombok:lombok:$lombokVersion"
    implementation "dom4j:dom4j:$dom4jVersion"
    implementation "org.slf4j:slf4j-api:$slf4jVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
    implementation "org.tinylog:tinylog-api:$tinylogVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Test dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
}

test {
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
}