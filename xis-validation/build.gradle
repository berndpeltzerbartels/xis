plugins {
    id 'java'
}

group 'one.xis'
version rootProject.ext.projectVersion

tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
}

repositories {
    mavenCentral()
}

// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var reflectionsVersion = rootProject.ext.libraryVersions.reflections
var junitVersion = rootProject.ext.libraryVersions.junit
var assertjVersion = rootProject.ext.libraryVersions.assertj
var gsonVersion = rootProject.ext.libraryVersions.gson
var jacksonVersion = rootProject.ext.libraryVersions.jackson
var mockitoVersion = rootProject.ext.libraryVersions.mockito


dependencies {

    // Local project dependencies
    implementation project(":xis-deserializer")
    implementation project(":xis-context")
    implementation project(":xis-util")
    implementation project(":xis-remote-core")

    // Annotation processors
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    // Implementation dependencies
    implementation "org.projectlombok:lombok:$lombokVersion"
    implementation "org.reflections:reflections:$reflectionsVersion"

    // Test dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
    testImplementation project(":xis-server")
    testImplementation project(":xis-test")
    testImplementation project(":xis-frontend")
    testImplementation "com.google.code.gson:gson:$gsonVersion"
    testImplementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
}

test {
    useJUnitPlatform()
}