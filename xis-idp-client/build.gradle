plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}


repositories {
    mavenCentral()
}

var lombokVersion = rootProject.ext.libraryVersions.lombok

dependencies {
    // Lombok dependencies
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    implementation("org.projectlombok:lombok:$lombokVersion")
    compileOnly(project(":xis-context"))
    compileOnly(project(":xis-security-common"))
    compileOnly(project(":xis-token"))
    compileOnly(project(":xis-adapter-spi"))
    compileOnly(project(":xis-controller-api"))
    compileOnly(project(":xis-gson"))
    compileOnly(project(":xis-util"))
    implementation project(':xis-http-client')

    implementation 'com.nimbusds:nimbus-jose-jwt:9.39.1'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = project.name

            pom {
                name = 'XIS ' + project.name.capitalize()
                description = 'Module ' + project.name + ' of the XIS declarative web framework.'
                url = 'https://github.com/berndpeltzerbartels/xis'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'bernd'
                        name = 'Bernd Peltzer-Bartels'
                        email = 'bernd@xis.one'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/berndpeltzerbartels/xis.git'
                    developerConnection = 'scm:git:git@github.com:berndpeltzerbartels/xis.git'
                    url = 'https://github.com/berndpeltzerbartels/xis'
                }
            }
        }
    }
    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2")
            credentials {
                username = project.findProperty("ossrhUsername") ?: ""
                password = project.findProperty("ossrhPassword") ?: ""
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
    useGpgCmd()
}
