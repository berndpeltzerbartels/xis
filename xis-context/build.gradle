plugins {
    id 'java'
    id 'java-library'
}

group 'one.xis'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
}


// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var junitVersion = rootProject.ext.libraryVersions.junit
var assertjVersion = rootProject.ext.libraryVersions.assertj
var reflectionsVersion = rootProject.ext.libraryVersions.reflections
var tinylogVersion = rootProject.ext.libraryVersions.tinylog


dependencies {

    implementation project(':xis-util')
    implementation "org.tinylog:tinylog-api:$tinylogVersion"

    implementation "org.reflections:reflections:$reflectionsVersion"

    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    implementation "org.projectlombok:lombok:$lombokVersion"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.16.1'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

    testImplementation project(':xis-test')

}

test {
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
}


dependencies {

    // Lombok dependencies
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    implementation "org.projectlombok:lombok:$lombokVersion"

    // JUnit dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // AssertJ dependencies
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    // Local project dependencies
    implementation project(":xis-util")
    testImplementation project(":xis-test")

}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
    maxParallelForks = 4
}
