plugins {
    id 'java'
}

group 'one.xis'
version rootProject.ext.projectVersion

repositories {
    mavenCentral()
}

tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
}

// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var dom4jVersion = rootProject.ext.libraryVersions.dom4j
var slf4jVersion = rootProject.ext.libraryVersions.slf4j
var jacksonDatabindVersion = rootProject.ext.libraryVersions.jacksonDatabind
var tinylogVersion = rootProject.ext.libraryVersions.tinylog
var gsonVersion = rootProject.ext.libraryVersions.gson
var junitVersion = rootProject.ext.libraryVersions.junit
var mockitoVersion = rootProject.ext.libraryVersions.mockito
var assertjVersion = rootProject.ext.libraryVersions.assertj

dependencies {

    // Local project dependencies
    implementation(project(":xis-context"))
    implementation(project(":xis-util"))
    implementation(project(":xis-remote-core"))
    implementation(project(":xis-javascript"))
    implementation(project(":xis-deserializer"))
    implementation(project(":xis-gson"))
    implementation(project(":xis-validation"))
    implementation(project(":xis-frontend"))

    compileOnly(project(":xis-resources"))

    // Lombok dependencies
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    implementation("org.projectlombok:lombok:$lombokVersion")

    // Dom4j dependency
    implementation("dom4j:dom4j:$dom4jVersion")

    // SLF4J dependency
    implementation("org.slf4j:slf4j-api:$slf4jVersion")

    // Jackson dependency
    implementation("com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion")

    // Tinylog dependencies
    implementation("org.tinylog:tinylog-api:$tinylogVersion")

    // Gson dependency
    implementation("com.google.code.gson:gson:$gsonVersion")

    // JUnit dependencies
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")

    // Mockito dependencies
    testImplementation("org.mockito:mockito-core:$mockitoVersion")

    // AssertJ dependency
    testImplementation("org.assertj:assertj-core:$assertjVersion")
}

test {
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
}
