plugins {
    id 'java'
}

group = 'one.xis'
version = '0.1.1'

repositories {
    mavenCentral()
}
var lombokVersion = rootProject.ext.libraryVersions.lombok
var junitVersion = rootProject.ext.libraryVersions.junit
var assertjVersion = rootProject.ext.libraryVersions.assertj
var tinylogVersion = rootProject.ext.libraryVersions.tinylog
var gsonVersion = rootProject.ext.gsonVersion

dependencies {
    // Local project dependencies
    compileOnly(project(":xis-idp:xis-idp-server"))
    //compileOnly(project(":xis-deserializer"))
    //compileOnly(project(":xis-resources"))
    implementation(project(":xis-context"))
    implementation(project(":xis-util"))
    implementation(project(":xis-security"))
    compileOnly(project(":xis-adapter-spi"))
    compileOnly(project(":xis-server"))
    compileOnly(project(":xis-validation"))
    compileOnly(project(":xis-idp"))
    compileOnly(project(':xis-idp:xis-token'))
    compileOnly(project(":xis-idp:xis-idp-client"))
    compileOnly(project(":xis-gson"))

    // Gson dependency
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation 'com.google.guava:guava:33.1.0-jre'


    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.11.5' // nutzt Gson statt Jackson


    // Lombok dependencies
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    implementation("org.projectlombok:lombok:$lombokVersion")

    // JUnit dependencies
    testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation("org.assertj:assertj-core:$assertjVersion")
    testImplementation(project(":xis-adapter-spi"))
}

test {
    useJUnitPlatform()
}