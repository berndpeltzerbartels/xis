plugins {
    id 'java'
    id 'java-gradle-plugin'
    id 'groovy'
    id 'maven-publish'
    // id 'signing'
    id 'com.gradle.plugin-publish' version '0.15.0' // optional für Plugin-Portal
}

group = rootProject.ext.projectGroup
version = rootProject.ext.projectVersion

repositories {
    mavenCentral()
    mavenLocal()
}

tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
    options.encoding = 'UTF-8'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
    withSourcesJar()
    withJavadocJar()
}

dependencies {
    implementation gradleApi()
    implementation localGroovy()
}

pluginBundle {
    website = 'https://example.com' // optional, für Plugin-Portal
    vcsUrl = 'https://github.com/example/repo'
    tags = ['java', 'dependency', 'java-version']
}

gradlePlugin {
    plugins {
        springPlugin {
            id = 'one.xis.xis-plugin'
            implementationClass = 'one.xis.plugin.XISPlugin'
        }
    }
}

// ✔ Eigene Publication für Maven Central
publishing {
    publications {
        pluginPublication(MavenPublication) {
            from components.java
            artifactId = project.name

            pom {
                name = 'XIS Plugin'
                description = 'Gradle plugin module for the XIS declarative web framework.'
                url = 'https://github.com/berndpeltzerbartels/xis'

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'bernd'
                        name = 'Bernd Peltzer-Bartels'
                        email = 'bernd@xis.one'
                    }
                }

                scm {
                    connection = 'scm:git:https://github.com/berndpeltzerbartels/xis.git'
                    developerConnection = 'scm:git:git@github.com:berndpeltzerbartels/xis.git'
                    url = 'https://github.com/berndpeltzerbartels/xis'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = uri("https://s01.oss.sonatype.org/service/local/staging/deploy/maven2")
            credentials {
                username = project.findProperty("ossrhUsername") ?: ""
                password = project.findProperty("ossrhPassword") ?: ""
            }
        }
    }
}
/*
signing {
    sign publishing.publications.pluginPublication
    useGpgCmd()
}
*/

// ✍️ Kleine Zusatzaufgaben für Version-Dateien
task writeVersionToFile {
    doLast {
        def versionFile = new File(buildDir, "plugin-version.txt")
        versionFile.text = project.version.toString()
        println "Plugin version written to: " + versionFile
    }
}

task writeJavaVersionIntToFile {
    doLast {
        def versionFile = new File(buildDir, "java-version.txt")
        versionFile.text = rootProject.ext.javaVersionInt
        println "Java version written to: " + versionFile
    }
}

classes.dependsOn writeVersionToFile
classes.dependsOn writeJavaVersionIntToFile
