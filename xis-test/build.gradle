plugins {
    id 'java'
}

group 'one.xis'
version rootProject.ext.projectVersion

repositories {
    mavenCentral()
}


tasks.withType(JavaCompile) {
    sourceCompatibility = rootProject.ext.javaVersion.toString()
    targetCompatibility = rootProject.ext.javaVersion.toString()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(rootProject.ext.javaVersionInt)
    }
}

// Local variables for versions
var lombokVersion = rootProject.ext.libraryVersions.lombok
var reflectionsVersion = rootProject.ext.libraryVersions.reflections
var mockitoVersion = rootProject.ext.libraryVersions.mockito
var graalVmVersion = "23.0.1"
var tinylogVersion = "2.6.1"
var nashornVersion = "15.4"
var jacksonDatabindVersion = "2.14.1"
var junitVersion = rootProject.ext.libraryVersions.junit
var assertjVersion = rootProject.ext.libraryVersions.assertj

dependencies {

    // Local project dependencies
    implementation project(':xis-context')
    implementation project(':xis-util')
    implementation project(':xis-remote-core')
    implementation project(':xis-resources')
    implementation project(':xis-server')
    implementation project(':xis-adapter-spi')
    implementation project(':xis-gson')
    implementation project(':xis-javascript')

    // Annotation processors
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"

    // Implementation dependencies
    implementation "org.projectlombok:lombok:$lombokVersion"
    implementation "org.reflections:reflections:$reflectionsVersion"
    implementation "org.mockito:mockito-core:$mockitoVersion"
    implementation "org.graalvm.js:js:$graalVmVersion"
    implementation "org.graalvm.js:js-scriptengine:$graalVmVersion"
    implementation "org.graalvm.truffle:truffle-api:$graalVmVersion"
    implementation "org.tinylog:tinylog-impl:$tinylogVersion"
    implementation "org.openjdk.nashorn:nashorn-core:$nashornVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"

    // Test dependencies
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"
}

test {
    maxParallelForks = 4
    useJUnitPlatform()
    afterTest { desc, result ->
        logger.quiet "${desc.className} - ${desc.name}: ${result.resultType}"
    }
}
